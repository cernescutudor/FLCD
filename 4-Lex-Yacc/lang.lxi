%{
#include "y.tab.h"
#include <stdio.h>
#include <stdlib.h>
%}

%%
[ \t\r\n]+              { /* Ignore whitespace */ }
"begin"                 { return PROG_BEGIN; }
"end"                   { return END; }
"if"                    { return IF; }
"else"                  { return ELSE; }
"while"                 { return WHILE; }
"readInt"               { return READINT; }
"readChar"              { return READCHAR; }
"readBool"              { return READBOOL; }
"print"                 { return PRINT; }
"int"                   { return INT; }
"bool"                  { return BOOL; }
"char"                  { return CHAR; }
"true"                  { return TRUE; }
"false"                 { return FALSE; }
"=="                    { return EQ; }
"!="                    { return NEQ; }
"<="                    { return LEQ; }
">="                    { return GEQ; }
"<"                     { return LT; }
">"                     { return GT; }
"="                     { return ASSIGN; }
"+"                     { return PLUS; }
"-"                     { return MINUS; }
"*"                     { return MULT; }
"/"                     { return DIV; }
"%"                     { return MOD; }
"("                     { return LPAREN; }
")"                     { return RPAREN; }
"{"                     { return LBRACE; }
"}"                     { return RBRACE; }
"["                     { return LBRACKET; }
"]"                     { return RBRACKET; }
";"                     { return SEMICOLON; }
","                     { return COMMA; }
"'"[a-zA-Z0-9_\+\-\*\/\=<>!;,(){}\[\]]"'" { yylval.strval = strdup(yytext); return CHARCONST; }
[0-9]+                  { yylval.intval = atoi(yytext); return INTCONST; }
[_a-zA-Z][_a-zA-Z0-9]*  { yylval.strval = strdup(yytext); return IDENTIFIER; }
.                       { printf("Unexpected character: %s\n", yytext); return ERROR; }
%%

int yywrap() { return 1; }
